{
  "extends": ["plugin:prettier/recommended", "plugin:import/recommended"],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "extraFileExtensions": [".astro"]
  },
  "rules": {
    "prettier/prettier": ["error"]
  },
  "overrides": [
    // Configuration for .mjs and .cjs files  (ESM and CJS)
    {
      "files": ["*.mjs", "*.cjs"],
      "extends": ["eslint:recommended", "plugin:prettier/recommended"],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "import/no-unresolved": "off"
      }
    },

    // Configuration for TypeScript files (TS and TSX)
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "parser": "@typescript-eslint/parser",
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:react/recommended",
        "plugin:jsx-a11y/recommended",
        "plugin:import/errors",
        "plugin:import/warnings",
        "plugin:import/typescript",
        "plugin:prettier/recommended",
        "plugin:tailwindcss/recommended"
      ],
      "plugins": [
        "@typescript-eslint",
        "react",
        "jsx-a11y",
        "import",
        "prettier",
        "tailwindcss",
        "simple-import-sort",
        "unused-imports"
      ],
      "parserOptions": {
        "project": "./tsconfig.json"
      },
      "settings": {
        "react": {
          "version": "detect"
        },
        "import/resolver": {
          "typescript": {
            "alwaysTryTypes": true,
            "project": "./tsconfig.json"
          },
          "node": {
            "extensions": [".js", ".jsx", ".ts", ".tsx"]
          }
        }
      },
      "rules": {
        "prettier/prettier": ["error"],
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "react/react-in-jsx-scope": "off",
        "react/prop-types": "off",
        "tailwindcss/classnames-order": "warn",
        "tailwindcss/no-custom-classname": "off",
        "sort-imports": [
          "error",
          {
            "ignoreCase": false,
            "ignoreDeclarationSort": true,
            "ignoreMemberSort": false,
            "memberSyntaxSortOrder": ["none", "all", "multiple", "single"],
            "allowSeparatedGroups": true
          }
        ],
        "import/no-unresolved": "error",
        "import/named": "error",
        "import/order": [
          "error",
          {
            "groups": [
              "builtin",
              "external",
              "internal",
              "parent",
              "sibling",
              "index",
              "unknown"
            ],
            "newlines-between": "always",
            "alphabetize": {
              "order": "asc",
              "caseInsensitive": true
            }
          }
        ],
        "simple-import-sort/imports": "error", // Import configuration for `eslint-plugin-simple-import-sort`
        "simple-import-sort/exports": "error" // Export configuration for `eslint-plugin-simple-import-sort`
      }
    },

    // Configuration for Astro files
    {
      "files": ["*.astro"],
      "parser": "astro-eslint-parser",
      "parserOptions": {
        "parser": "@typescript-eslint/parser"
      },
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:react/recommended",
        "plugin:jsx-a11y/recommended",
        "plugin:import/errors",
        "plugin:import/warnings",
        "plugin:import/typescript",
        "plugin:prettier/recommended",
        "plugin:tailwindcss/recommended",
        "plugin:astro/recommended"
      ],
      "plugins": [
        "@typescript-eslint",
        "react",
        "jsx-a11y",
        "import",
        "prettier",
        "tailwindcss",
        "astro",
        "simple-import-sort",
        "unused-imports"
      ],
      "settings": {
        "react": {
          "version": "detect"
        }
      },
      "rules": {
        "prettier/prettier": ["error"],
        "sort-imports": [
          "error",
          {
            "ignoreCase": false,
            "ignoreDeclarationSort": true,
            "ignoreMemberSort": false,
            "memberSyntaxSortOrder": ["none", "all", "multiple", "single"],
            "allowSeparatedGroups": true
          }
        ],
        "import/named": "error",
        "import/order": [
          "error",
          {
            "groups": [
              "builtin",
              "external",
              "internal",
              "parent",
              "sibling",
              "index",
              "unknown"
            ],
            "newlines-between": "always",
            "alphabetize": {
              "order": "asc",
              "caseInsensitive": true
            }
          }
        ],
        "react/react-in-jsx-scope": "off",
        "import/no-unresolved": [
          "error",
          {
            "ignore": ["@/*", ".*\\.astro$"]
          }
        ], // Disable no-unresolved rule for .astro files
        "react/jsx-filename-extension": [1, { "extensions": [".astro"] }], // Accept jsx in astro files
        "react/destructuring-assignment": "off", // Vscode doesn't support automatically destructuring, it's a pain to add a new variable
        "react/require-default-props": "off", // Allow non-defined react props as undefined
        "react/jsx-props-no-spreading": "off", // _app.tsx uses spread operator and also, react-hook-form
        "react/no-unknown-property": "off", // Allow unknown properties in Astro
        "react/no-unescaped-entities": "off", // Allow unescaped entities in Astro
        "@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
        "@typescript-eslint/consistent-type-imports": "error", // Ensure `import type` is used when it's necessary
        "import/prefer-default-export": "off", // Named export is easier to refactor automatically
        "tailwindcss/classnames-order": [
          "warn",
          {
            "officialSorting": true
          }
        ], // Follow the same ordering as the official plugin `prettier-plugin-tailwindcss`
        "simple-import-sort/imports": "error", // Import configuration for `eslint-plugin-simple-import-sort`
        "simple-import-sort/exports": "error", // Export configuration for `eslint-plugin-simple-import-sort`
        "@typescript-eslint/no-unused-vars": "off",
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": [
          "error",
          { "argsIgnorePattern": "^_" }
        ]
      },
      "globals": {
        "Astro": "readonly"
      }
    }
  ]
}
